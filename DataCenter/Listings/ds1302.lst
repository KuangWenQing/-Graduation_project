C51 COMPILER V9.54   DS1302                                                                05/13/2019 20:34:21 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Objects\ds1302.obj
COMPILER INVOKED BY: E:\Keil_v5\C51\BIN\C51.EXE hardware\ds1302\ds1302.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\hardware\dela
                    -y;.\hardware\ds1302;.\hardware\LCD12864C;.\hardware\NRF24L01) DEBUG OBJECTEXTEND PRINT(.\Listings\ds1302.lst) TABS(2) OB
                    -JECT(.\Objects\ds1302.obj)

line level    source

   1          #include"ds1302.h"
   2          
   3          //---DS1302写入和读取时分秒的地址命令---//
   4          //---秒分时日月周年 最低位读写位;-------//
   5          uchar code READ_RTC_ADDR[7] = {0x81, 0x83, 0x85, 0x87, 0x89, 0x8b, 0x8d}; 
   6          uchar code WRITE_RTC_ADDR[7] = {0x80, 0x82, 0x84, 0x86, 0x88, 0x8a, 0x8c};
   7          
   8          //---DS1302时钟初始化2019年3月17日星期天23点8分0秒。---//
   9          //---存储顺序是秒分时日月周年,存储格式是用BCD码---//
  10          uchar TIME[7] = {0, 0x08, 0x23, 0x17, 0x03, 0x07, 0x19};
  11          
  12          
  13          /*******************************************************************************
  14          * 函 数 名         : Ds1302Write
  15          * 函数功能       : 向DS1302命令（地址+数据）
  16          * 输    入         : addr,dat
  17          * 输    出         : 无
  18          *******************************************************************************/
  19          
  20          void Ds1302Write(uchar addr, uchar dat)
  21          {
  22   1        uchar n;
  23   1        RST = 0;
  24   1        _nop_();
  25   1      
  26   1        SCLK = 0;//先将SCLK置低电平。
  27   1        _nop_();
  28   1        RST = 1; //然后将RST(CE)置高电平。
  29   1        _nop_();
  30   1      
  31   1        for (n=0; n<8; n++)//开始传送八位地址命令
  32   1        {
  33   2          DSIO = addr & 0x01;//数据从低位开始传送
  34   2          addr >>= 1;
  35   2          SCLK = 1;//数据在上升沿时，DS1302读取数据
  36   2          _nop_();
  37   2          SCLK = 0;
  38   2          _nop_();
  39   2        }
  40   1        for (n=0; n<8; n++)//写入8位数据
  41   1        {
  42   2          DSIO = dat & 0x01;
  43   2          dat >>= 1;
  44   2          SCLK = 1;//数据在上升沿时，DS1302读取数据
  45   2          _nop_();
  46   2          SCLK = 0;
  47   2          _nop_();  
  48   2        } 
  49   1           
  50   1        RST = 0;//传送数据结束
  51   1        _nop_();
  52   1      }
  53          
C51 COMPILER V9.54   DS1302                                                                05/13/2019 20:34:21 PAGE 2   

  54          /*******************************************************************************
  55          * 函 数 名         : Ds1302Read
  56          * 函数功能       : 读取一个地址的数据
  57          * 输    入         : addr
  58          * 输    出         : dat
  59          *******************************************************************************/
  60          
  61          uchar Ds1302Read(uchar addr)
  62          {
  63   1        uchar n,dat,dat1;
  64   1        RST = 0;
  65   1        _nop_();
  66   1      
  67   1        SCLK = 0;//先将SCLK置低电平。
  68   1        _nop_();
  69   1        RST = 1;//然后将RST(CE)置高电平。
  70   1        _nop_();
  71   1      
  72   1        for(n=0; n<8; n++)//开始传送八位地址命令
  73   1        {
  74   2          DSIO = addr & 0x01;//数据从低位开始传送
  75   2          addr >>= 1;
  76   2          SCLK = 1;//数据在上升沿时，DS1302读取数据
  77   2          _nop_();
  78   2          SCLK = 0;//DS1302下降沿时，放置数据
  79   2          _nop_();
  80   2        }
  81   1        _nop_();
  82   1        for(n=0; n<8; n++)//读取8位数据
  83   1        {
  84   2          dat1 = DSIO;//从最低位开始接收
  85   2          dat = (dat>>1) | (dat1<<7);
  86   2          SCLK = 1;
  87   2          _nop_();
  88   2          SCLK = 0;//DS1302下降沿时，放置数据
  89   2          _nop_();
  90   2        }
  91   1      
  92   1        RST = 0;
  93   1        _nop_();  //以下为DS1302复位的稳定时间,必须的。
  94   1        SCLK = 1;
  95   1        _nop_();
  96   1        DSIO = 0;
  97   1        _nop_();
  98   1        DSIO = 1;
  99   1        _nop_();
 100   1        return dat; 
 101   1      }
 102          
 103          /*******************************************************************************
 104          * 函 数 名         : Ds1302Init
 105          * 函数功能       : 初始化DS1302.
 106          * 输    入         : 无
 107          * 输    出         : 无
 108          *******************************************************************************/
 109          
 110          void Ds1302Init()
 111          {
 112   1        Ds1302Write(0x8E,0x80);    //打开写保护功能
 113   1      }
 114          
 115          /*******************************************************************************
C51 COMPILER V9.54   DS1302                                                                05/13/2019 20:34:21 PAGE 3   

 116          * 函 数 名         : Ds1302ReadTime
 117          * 函数功能       : 读取时钟信息
 118          * 输    入         : 无
 119          * 输    出         : 无
 120          *******************************************************************************/
 121          
 122          void Ds1302ReadTime()
 123          {
 124   1        uchar n;
 125   1        for (n=0; n<7; n++)//读取7个字节的时钟信号：分秒时日月周年
 126   1        {
 127   2          TIME[n] = Ds1302Read(READ_RTC_ADDR[n]);
 128   2        }
 129   1          
 130   1      }
 131          
 132          void Ds1302WriteTime()
 133          {
 134   1        uchar n;
 135   1        Ds1302Write(0x8E,0X00);    //禁止写保护，就是关闭写保护功能
 136   1        for (n=0; n<7; n++)//写入7个字节的时钟信号：分秒时日月周年
 137   1        {
 138   2          Ds1302Write(WRITE_RTC_ADDR[n],TIME[n]); 
 139   2        }
 140   1        Ds1302Write(0x8E,0x80);    //打开写保护功能
 141   1      }
 142          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    191    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
